ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure sum ([a, b]) int v; v = a+b; print(v); procedure product ([a, b]) int v; v = a*b; print(v); int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure sum ([a, b]) int v; v = a+b; print(v)
procedure product ([a, b]) int v; v = a*b; print(v); int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure sum ([a, b]) int v; v = a+b; print(v)
procedure product ([a, b]) int v; v = a*b; print(v); int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure product ([a, b]) int v; v = a*b; print(v); int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure product ([a, b]) int v; v = a*b; print(v); int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure product ([a, b]) int v; v = a*b; print(v)
int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
procedure product ([a, b]) int v; v = a*b; print(v)
int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v; int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v
int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v
int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int w; v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int w
v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int w
v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = 2; w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = 2
w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = 2
w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 0
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 0
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
w = 5; call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
w = 5
call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
w = 5
call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 0


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
call sum ([v*10, w]); print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
call sum ([v*10, w])
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
call sum ([v*10, w])
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v; v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v; v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v
v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int v
v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = a+b; print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = a+b
print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
v = a+b
print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 0

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 25

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v)
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 25

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 25

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
return
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
a -> 20
b -> 5
v -> 25

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v); fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v)
fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(v)
fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(call product ([v, w]); fork(call sum ([v, w])))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
call product ([v, w]); fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
call product ([v, w]); fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
call product ([v, w])
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
call product ([v, w])
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
int v; v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
int v; v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
int v
v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
int v
v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
v = a*b; print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
v = a*b
print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
v = a*b
print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 10

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
print(v)
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 10

 -------- Output Console -------- 
25
2

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 10

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
return
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 10

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
fork(call sum ([v, w]))



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
call sum ([v, w])



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
call sum ([v, w])



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
int v; v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
int v; v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
int v
v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
int v
v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
v = a+b; print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
v = a+b
print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
v = a+b
print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 0

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 7

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
print(v)
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 7

 -------- Output Console -------- 
25
2
10

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 7

 -------- Output Console -------- 
25
2
10
7

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
return



 -------- Symbol  Table -------- 
a -> 2
b -> 5
v -> 7

 -------- Output Console -------- 
25
2
10
7

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10
7

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 



 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10
7

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
v -> 2
w -> 5

 -------- Output Console -------- 
25
2
10
7

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Stack Symbol Table -------- 
v -> 2
w -> 5


 --------  Procedure Table -------- 
product -> [a, b]=int v; v = a*b; print(v)
sum -> [a, b]=int v; v = a+b; print(v)

 ------------------------------- 



