ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v1;
Ref (int) v2;
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v1
Ref (int) v2;
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v1
Ref (int) v2;
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v2;
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v2;
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v2
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v2
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v3;
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v3
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
Ref (int) v3
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int cnt;
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int cnt
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
int cnt
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v1,2);
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v1,2)
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v1,2)
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v2,3);
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v2,3)
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v2,3)
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v3,4);
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v3,4)
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
new(v3,4)
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
newBarrier (cnt, readHeap(v2));
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
newBarrier (cnt, readHeap(v2))
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
newBarrier (cnt, readHeap(v2))
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 0
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)));
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)))
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1)))
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)));
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)))
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
fork(barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2)))
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt);
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
barrierAwait (cnt)
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
print(readHeap(v3))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
writeHeap(v1, readHeap(v1)*10);
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10);
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
writeHeap(v1, readHeap(v1)*10)
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10)
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
writeHeap(v1, readHeap(v1)*10)
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10)
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 2
2 -> 3
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 1 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
print(readHeap(v1))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10);
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10)
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
writeHeap(v2, readHeap(v2)*10)
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 30
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 2 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
print(readHeap(v2))
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20
300

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 
 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20
300

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



ProgramID: --------- 3 ---------
 --------Execution Stack-------- 

 -------- Symbol  Table -------- 
cnt -> 1
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)

 -------- Output Console -------- 
4
20
300

 --------  File  Table  -------- 

 --------  Heap  Table  -------- 
1 -> 20
2 -> 300
3 -> 4

 --------  Lock  Table  -------- 

 --------  Latch  Table  -------- 

 ------  Semaphore  Table1  ------ 

 ------  Semaphore  Table2  ------ 

 ------  Barrier  Table  ------ 
1 -> 3=[2, 1, 3]

 ------------------------------- 



